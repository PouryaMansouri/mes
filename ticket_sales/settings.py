"""
Django settings for ticket_sales project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='secret')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = ['*', ]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_ALL_ORIGINS = True

# Application definition

TICKET_APPS = [
    'site_settings',
    'core',
    'events',
    'teams',
    'accounts',
    'players',
]

THIRD_PARTY_APPS = [
    'rest_framework',
    'django_jalali',
    'crispy_forms',
    'azbankgateways',
    # 'rosetta',
]

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + TICKET_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ticket_sales.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ticket_sales.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
# if DEBUG:
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
# else:
DATABASES = {
       'default': {
        'ENGINE': config('ENGINE', default='django.db.backends.postgresql'),
        'NAME': config('NAME', default='postgres'),
        'USER': config('USER', default='postgres'),
        'PASSWORD': config('PASSWORD', default='postgres'),
        'HOST': config('DB_HOST', default='localhost'),
        'PORT': config('PORT', default='5432'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'fa'

LANGUAGES = (
    ('en', 'English'),
    ('fa', 'Farsi'),
)

LOCALE_PATHS = (BASE_DIR / 'locale',)

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/assets/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
]
STATIC_ROOT = BASE_DIR / "assets"

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'accounts.User'
LOGIN_URL = 'customers:login'
LOGIN_REDIRECT_URL = 'events:index'
LOGOUT_REDIRECT_URL = 'events:index'

# REST_FRAMEWORK = {
# 'DEFAULT_THROTTLE_CLASSES': [
#     'rest_framework.throttling.AnonRateThrottle',
#     'rest_framework.throttling.UserRateThrottle'
# ],
# 'DEFAULT_THROTTLE_RATES': {
#     'anon': '1/minute',
#     'user': '1/minute',
# }
# }

# Email config
# Send email config
EMAIL_BACKEND = config('EMAIL_BACKEND', default='django.core.mail.backends.smtp.EmailBackend')
MAILER_EMAIL_BACKEND = config('MAILER_EMAIL_BACKEND')
EMAIL_HOST = config('EMAIL_HOST', default='localhost')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
EMAIL_PORT = config('EMAIL_PORT', default=25)
EMAIL_USE_SSL = config('EMAIL_USE_SSL', default=False)

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'default': {
#             'format': '[DJANGO] %(levelname)s %(asctime)s %(module)s '
#                       '%(name)s.%(funcName)s:%(lineno)s: %(message)s'
#         },
#     },
#     'handlers': {
#         'console': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#             'formatter': 'default',
#         }
#     },
#     'loggers': {
#         '*': {
#             'handlers': ['console'],
#             'level': 'DEBUG',
#             'propagate': True,
#         }
#     },
# }

CRISPY_TEMPLATE_PACK = 'bootstrap4'

# Celery Configuration Options
CELERY_TIMEZONE = "Asia/Tehran"
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60
# todo: change redis server

# CACHES = {
#   'default': {
#     'BACKEND': 'redis_cache.RedisCache',
#     'LOCATION': 'mes-redis:6379',
#     'OPTIONS': {
#       'DB': 1,
#       'PASSWORD': 'pass123', # if redis has password!,
#       'PARSER_CLASS': 'redis.connection.HiredisParser',
#       'CONNECTION_POOL_CLASS': 'redis.BlockingConnectionPool',
#       'PICKLE_VERSION': -1,
#     },
#   },
# }

CELERY_BROKER_URL = "redis://redis:pass123@redis:6379",
CELERY_BROKER_TRANSPORT = 'redis'
# todo: change redis server
CELERY_RESULT_BACKEND = "redis://redis:pass123@redis:6379",
CELERY_RESULT_BACKEND='djcelery.backends.database:DatabaseBackend',

CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

CACHE_TTL = 600


# getway config
AZ_IRANIAN_BANK_GATEWAYS = {
   'GATEWAYS': {

    #    'ZARINPAL': {
    #        'MERCHANT_CODE': 'c2b6380d-f68e-4cc5-b52e-a9f0014d6374',
    #    },
       'IDPAY': {
           'MERCHANT_CODE': 'c2b6380d-f68e-4cc5-b52e-a9f0014d6374',
           'METHOD': 'POST',  # GET or POST
           'X_SANDBOX': 1,  # 0 disable, 1 active
       },

   },
   'IS_SAMPLE_FORM_ENABLE': True, # اختیاری و پیش فرض غیر فعال است
   'DEFAULT': 'ZARINPAL',
   'CURRENCY': 'IRR', # اختیاری
   'TRACKING_CODE_QUERY_PARAM': 'tc', # اختیاری
   'TRACKING_CODE_LENGTH': 16, # اختیاری
   'SETTING_VALUE_READER_CLASS': 'azbankgateways.readers.DefaultReader', # اختیاری
   'BANK_PRIORITIES': [
    # 'ZARINPAL',
    'IDPAY',
    #    'BMI',
    #    'SEP',
       # and so on ...
   ], # اختیاری
}